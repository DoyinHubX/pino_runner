# name: Node.js CI

# on:
#   push:
#     branches: [ main ]
#   pull_request:
#     branches: [ main ]

# jobs:
#   build:
#     runs-on: ubuntu-latest

#     steps:
#     - name: Checkout code
#       uses: actions/checkout@v4

#     - name: Use Node.js
#       uses: actions/setup-node@v4
#       with:
#         node-version: '20'

#     - name: Install dependencies
#       run: npm install

#     - name: Run tests (add your test command if available)
#       run: npm test

#     # Add a build step if you have one
#     - name: Build
#       run: npm run build --if-present




# name: CI Pipeline

# on:
#   push:
#     branches: [ main ]
#   pull_request:
#     branches: [ main ]

# jobs:
#   build-and-test:
#     runs-on: windows-latest

#     services:
#       mongodb:
#         image: mongo:latest
#         ports:
#           - 27017:27017
#         options: --health-cmd "mongo --eval 'db.runCommand(\"ping\").ok'" --health-interval 10s --health-timeout 5s --health-retries 5

#     steps:
#     - name: Checkout code
#       uses: actions/checkout@v4

#     - name: Use Node.js
#       uses: actions/setup-node@v4
#       with:
#         node-version: '20'
#         cache: 'npm'

#     - name: Install dependencies
#       run: npm ci

#     - name: Run linter
#       run: npm run lint

#     - name: Run security audit
#       run: npm run security-check

#     - name: Run tests
#       run: npm test
#       env:
#         MONGODB_URI: mongodb://localhost:27017/products_test
#         NODE_ENV: test

#     - name: Upload test results
#       uses: actions/upload-artifact@v3
#       if: always()
#       with:
#         name: test-results
#         path: |
#           coverage
#           logs/*.log



name: CI Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      mongodb:
        image: mongo:latest
        ports:
          - 27017:27017
        options: >-
          --health-cmd="mongosh --eval 'db.runCommand({ ping: 1 })'" 
          --health-interval=10s 
          --health-timeout=5s 
          --health-retries=5

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run linter
      run: npm run lint

    - name: Run security audit
      run: npm run security-check

    - name: Wait for MongoDB
      run: |
        for i in {1..10}; do
          nc -z localhost 27017 && echo "MongoDB is ready" && break
          echo "Waiting for MongoDB..."
          sleep 2
        done

    - name: Run tests
      run: npm test
      env:
        MONGODB_URI: mongodb://localhost:27017/products_test
        NODE_ENV: test

    - name: Upload test results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: test-results
        path: |
          coverage
          logs/*.log
